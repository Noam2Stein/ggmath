// This file was generated by an associated codegen crate.
// To modify this file, modify the source code of the associated codegen crate.

use crate::{Scalar, Vec2P, Vec3P, Vec4P, VecAlignment, Vector};

impl<T: Scalar, A: VecAlignment> Vector<2, T, A> {
    /// Returns a new vector with the `x` and `x` (1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xx(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 0>()
    }

    /// Returns a new vector with the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xy(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 1>()
    }

    /// Returns a new vector with the `y` and `x` (2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yx(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 0>()
    }

    /// Returns a new vector with the `y` and `y` (2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yy(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 1>()
    }

    /// Returns a new vector with the `x`, `x` and `x` (1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 0>()
    }

    /// Returns a new vector with the `x`, `x` and `y` (1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 1>()
    }

    /// Returns a new vector with the `x`, `y` and `x` (1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 0>()
    }

    /// Returns a new vector with the `x`, `y` and `y` (1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 1>()
    }

    /// Returns a new vector with the `y`, `x` and `x` (2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 0>()
    }

    /// Returns a new vector with the `y`, `x` and `y` (2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 1>()
    }

    /// Returns a new vector with the `y`, `y` and `x` (2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 0>()
    }

    /// Returns a new vector with the `y`, `y` and `y` (2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `x` (1st, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `y` (1st, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `x` (1st, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `y` (1st, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `x` (1st, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `y` (1st, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `x` (1st, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `y` (1st, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `x` (2nd, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `y` (2nd, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `x` (2nd, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `y` (2nd, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `x` (2nd, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `y` (2nd, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `x` (2nd, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `y` (2nd, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 1>()
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_xy(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<0, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_yx(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<1, 0>(value)
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_xy(&mut self, value: Vector<2, T, A>) {
        *self = self.with_xy(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_yx(&mut self, value: Vector<2, T, A>) {
        *self = self.with_yx(value);
    }
}

impl<T: Scalar, A: VecAlignment> Vector<3, T, A> {
    /// Returns a new vector with the `x` and `x` (1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xx(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 0>()
    }

    /// Returns a new vector with the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xy(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 1>()
    }

    /// Returns a new vector with the `x` and `z` (1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xz(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 2>()
    }

    /// Returns a new vector with the `y` and `x` (2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yx(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 0>()
    }

    /// Returns a new vector with the `y` and `y` (2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yy(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 1>()
    }

    /// Returns a new vector with the `y` and `z` (2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yz(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 2>()
    }

    /// Returns a new vector with the `z` and `x` (3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zx(self) -> Vector<2, T, A> {
        self.shuffle_2::<2, 0>()
    }

    /// Returns a new vector with the `z` and `y` (3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zy(self) -> Vector<2, T, A> {
        self.shuffle_2::<2, 1>()
    }

    /// Returns a new vector with the `z` and `z` (3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zz(self) -> Vector<2, T, A> {
        self.shuffle_2::<2, 2>()
    }

    /// Returns a new vector with the `x`, `x` and `x` (1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 0>()
    }

    /// Returns a new vector with the `x`, `x` and `y` (1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 1>()
    }

    /// Returns a new vector with the `x`, `x` and `z` (1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxz(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 2>()
    }

    /// Returns a new vector with the `x`, `y` and `x` (1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 0>()
    }

    /// Returns a new vector with the `x`, `y` and `y` (1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 1>()
    }

    /// Returns a new vector with the `x`, `y` and `z` (1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xyz(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 2>()
    }

    /// Returns a new vector with the `x`, `z` and `x` (1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xzx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 2, 0>()
    }

    /// Returns a new vector with the `x`, `z` and `y` (1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 2, 1>()
    }

    /// Returns a new vector with the `x`, `z` and `z` (1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzz(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 2, 2>()
    }

    /// Returns a new vector with the `y`, `x` and `x` (2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 0>()
    }

    /// Returns a new vector with the `y`, `x` and `y` (2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 1>()
    }

    /// Returns a new vector with the `y`, `x` and `z` (2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxz(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 2>()
    }

    /// Returns a new vector with the `y`, `y` and `x` (2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 0>()
    }

    /// Returns a new vector with the `y`, `y` and `y` (2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 1>()
    }

    /// Returns a new vector with the `y`, `y` and `z` (2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yyz(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 2>()
    }

    /// Returns a new vector with the `y`, `z` and `x` (2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn yzx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 2, 0>()
    }

    /// Returns a new vector with the `y`, `z` and `y` (2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 2, 1>()
    }

    /// Returns a new vector with the `y`, `z` and `z` (2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzz(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 2, 2>()
    }

    /// Returns a new vector with the `z`, `x` and `x` (3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 0, 0>()
    }

    /// Returns a new vector with the `z`, `x` and `y` (3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 0, 1>()
    }

    /// Returns a new vector with the `z`, `x` and `z` (3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxz(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 0, 2>()
    }

    /// Returns a new vector with the `z`, `y` and `x` (3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 1, 0>()
    }

    /// Returns a new vector with the `z`, `y` and `y` (3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 1, 1>()
    }

    /// Returns a new vector with the `z`, `y` and `z` (3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zyz(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 1, 2>()
    }

    /// Returns a new vector with the `z`, `z` and `x` (3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zzx(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 2, 0>()
    }

    /// Returns a new vector with the `z`, `z` and `y` (3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzy(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 2, 1>()
    }

    /// Returns a new vector with the `z`, `z` and `z` (3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzz(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 2, 2>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `x` (1st, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `y` (1st, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `z` (1st, 1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 2>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `x` (1st, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `y` (1st, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `z` (1st, 1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 2>()
    }

    /// Returns a new vector with the `x`, `x`, `z` and `x` (1st, 1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xxzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 2, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `z` and `y` (1st, 1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 2, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `z` and `z` (1st, 1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 2, 2>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `x` (1st, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `y` (1st, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `z` (1st, 2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xyxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 2>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `x` (1st, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `y` (1st, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `z` (1st, 2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xyyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 2>()
    }

    /// Returns a new vector with the `x`, `y`, `z` and `x` (1st, 2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xyzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 2, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `z` and `y` (1st, 2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 2, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `z` and `z` (1st, 2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xyzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 2, 2>()
    }

    /// Returns a new vector with the `x`, `z`, `x` and `x` (1st, 3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xzxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 0, 0>()
    }

    /// Returns a new vector with the `x`, `z`, `x` and `y` (1st, 3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 0, 1>()
    }

    /// Returns a new vector with the `x`, `z`, `x` and `z` (1st, 3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 0, 2>()
    }

    /// Returns a new vector with the `x`, `z`, `y` and `x` (1st, 3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xzyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 1, 0>()
    }

    /// Returns a new vector with the `x`, `z`, `y` and `y` (1st, 3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 1, 1>()
    }

    /// Returns a new vector with the `x`, `z`, `y` and `z` (1st, 3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 1, 2>()
    }

    /// Returns a new vector with the `x`, `z`, `z` and `x` (1st, 3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xzzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 2, 0>()
    }

    /// Returns a new vector with the `x`, `z`, `z` and `y` (1st, 3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 2, 1>()
    }

    /// Returns a new vector with the `x`, `z`, `z` and `z` (1st, 3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 2, 2>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `x` (2nd, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `y` (2nd, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `z` (2nd, 1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 2>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `x` (2nd, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `y` (2nd, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `z` (2nd, 1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 2>()
    }

    /// Returns a new vector with the `y`, `x`, `z` and `x` (2nd, 1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn yxzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 2, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `z` and `y` (2nd, 1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 2, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `z` and `z` (2nd, 1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 2, 2>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `x` (2nd, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `y` (2nd, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `z` (2nd, 2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn yyxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 2>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `x` (2nd, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `y` (2nd, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `z` (2nd, 2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yyyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 2>()
    }

    /// Returns a new vector with the `y`, `y`, `z` and `x` (2nd, 2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn yyzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 2, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `z` and `y` (2nd, 2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 2, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `z` and `z` (2nd, 2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yyzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 2, 2>()
    }

    /// Returns a new vector with the `y`, `z`, `x` and `x` (2nd, 3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yzxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 0, 0>()
    }

    /// Returns a new vector with the `y`, `z`, `x` and `y` (2nd, 3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 0, 1>()
    }

    /// Returns a new vector with the `y`, `z`, `x` and `z` (2nd, 3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 0, 2>()
    }

    /// Returns a new vector with the `y`, `z`, `y` and `x` (2nd, 3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yzyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 1, 0>()
    }

    /// Returns a new vector with the `y`, `z`, `y` and `y` (2nd, 3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 1, 1>()
    }

    /// Returns a new vector with the `y`, `z`, `y` and `z` (2nd, 3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 1, 2>()
    }

    /// Returns a new vector with the `y`, `z`, `z` and `x` (2nd, 3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn yzzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 2, 0>()
    }

    /// Returns a new vector with the `y`, `z`, `z` and `y` (2nd, 3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 2, 1>()
    }

    /// Returns a new vector with the `y`, `z`, `z` and `z` (2nd, 3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 2, 2>()
    }

    /// Returns a new vector with the `z`, `x`, `x` and `x` (3rd, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 0, 0>()
    }

    /// Returns a new vector with the `z`, `x`, `x` and `y` (3rd, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 0, 1>()
    }

    /// Returns a new vector with the `z`, `x`, `x` and `z` (3rd, 1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 0, 2>()
    }

    /// Returns a new vector with the `z`, `x`, `y` and `x` (3rd, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 1, 0>()
    }

    /// Returns a new vector with the `z`, `x`, `y` and `y` (3rd, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 1, 1>()
    }

    /// Returns a new vector with the `z`, `x`, `y` and `z` (3rd, 1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 1, 2>()
    }

    /// Returns a new vector with the `z`, `x`, `z` and `x` (3rd, 1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zxzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 2, 0>()
    }

    /// Returns a new vector with the `z`, `x`, `z` and `y` (3rd, 1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 2, 1>()
    }

    /// Returns a new vector with the `z`, `x`, `z` and `z` (3rd, 1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 2, 2>()
    }

    /// Returns a new vector with the `z`, `y`, `x` and `x` (3rd, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 0, 0>()
    }

    /// Returns a new vector with the `z`, `y`, `x` and `y` (3rd, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 0, 1>()
    }

    /// Returns a new vector with the `z`, `y`, `x` and `z` (3rd, 2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zyxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 0, 2>()
    }

    /// Returns a new vector with the `z`, `y`, `y` and `x` (3rd, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 1, 0>()
    }

    /// Returns a new vector with the `z`, `y`, `y` and `y` (3rd, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 1, 1>()
    }

    /// Returns a new vector with the `z`, `y`, `y` and `z` (3rd, 2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zyyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 1, 2>()
    }

    /// Returns a new vector with the `z`, `y`, `z` and `x` (3rd, 2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zyzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 2, 0>()
    }

    /// Returns a new vector with the `z`, `y`, `z` and `y` (3rd, 2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zyzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 2, 1>()
    }

    /// Returns a new vector with the `z`, `y`, `z` and `z` (3rd, 2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zyzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 2, 2>()
    }

    /// Returns a new vector with the `z`, `z`, `x` and `x` (3rd, 3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zzxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 0, 0>()
    }

    /// Returns a new vector with the `z`, `z`, `x` and `y` (3rd, 3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 0, 1>()
    }

    /// Returns a new vector with the `z`, `z`, `x` and `z` (3rd, 3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 0, 2>()
    }

    /// Returns a new vector with the `z`, `z`, `y` and `x` (3rd, 3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zzyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 1, 0>()
    }

    /// Returns a new vector with the `z`, `z`, `y` and `y` (3rd, 3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 1, 1>()
    }

    /// Returns a new vector with the `z`, `z`, `y` and `z` (3rd, 3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 1, 2>()
    }

    /// Returns a new vector with the `z`, `z`, `z` and `x` (3rd, 3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zzzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 2, 0>()
    }

    /// Returns a new vector with the `z`, `z`, `z` and `y` (3rd, 3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 2, 1>()
    }

    /// Returns a new vector with the `z`, `z`, `z` and `z` (3rd, 3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 2, 2>()
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_xy(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<0, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_xz(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<0, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_yx(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<1, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_yz(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<1, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_zx(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<2, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_zy(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<2, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_xyz(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<0, 1, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_xzy(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<0, 2, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_yxz(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<1, 0, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_yzx(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<1, 2, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_zxy(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<2, 0, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_zyx(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<2, 1, 0>(value)
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_xy(&mut self, value: Vector<2, T, A>) {
        *self = self.with_xy(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_xz(&mut self, value: Vector<2, T, A>) {
        *self = self.with_xz(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_yx(&mut self, value: Vector<2, T, A>) {
        *self = self.with_yx(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_yz(&mut self, value: Vector<2, T, A>) {
        *self = self.with_yz(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_zx(&mut self, value: Vector<2, T, A>) {
        *self = self.with_zx(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_zy(&mut self, value: Vector<2, T, A>) {
        *self = self.with_zy(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_xyz(&mut self, value: Vector<3, T, A>) {
        *self = self.with_xyz(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_xzy(&mut self, value: Vector<3, T, A>) {
        *self = self.with_xzy(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_yxz(&mut self, value: Vector<3, T, A>) {
        *self = self.with_yxz(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_yzx(&mut self, value: Vector<3, T, A>) {
        *self = self.with_yzx(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_zxy(&mut self, value: Vector<3, T, A>) {
        *self = self.with_zxy(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_zyx(&mut self, value: Vector<3, T, A>) {
        *self = self.with_zyx(value);
    }
}

impl<T: Scalar, A: VecAlignment> Vector<4, T, A> {
    /// Returns a new vector with the `x` and `x` (1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xx(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 0>()
    }

    /// Returns a new vector with the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xy(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 1>()
    }

    /// Returns a new vector with the `x` and `z` (1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xz(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 2>()
    }

    /// Returns a new vector with the `x` and `w` (1st and 4th) components of `self`.
    #[inline(always)]
    pub fn xw(self) -> Vector<2, T, A> {
        self.shuffle_2::<0, 3>()
    }

    /// Returns a new vector with the `y` and `x` (2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yx(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 0>()
    }

    /// Returns a new vector with the `y` and `y` (2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yy(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 1>()
    }

    /// Returns a new vector with the `y` and `z` (2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yz(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 2>()
    }

    /// Returns a new vector with the `y` and `w` (2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn yw(self) -> Vector<2, T, A> {
        self.shuffle_2::<1, 3>()
    }

    /// Returns a new vector with the `z` and `x` (3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zx(self) -> Vector<2, T, A> {
        self.shuffle_2::<2, 0>()
    }

    /// Returns a new vector with the `z` and `y` (3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zy(self) -> Vector<2, T, A> {
        self.shuffle_2::<2, 1>()
    }

    /// Returns a new vector with the `z` and `z` (3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zz(self) -> Vector<2, T, A> {
        self.shuffle_2::<2, 2>()
    }

    /// Returns a new vector with the `z` and `w` (3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn zw(self) -> Vector<2, T, A> {
        self.shuffle_2::<2, 3>()
    }

    /// Returns a new vector with the `w` and `x` (4th and 1st) components of `self`.
    #[inline(always)]
    pub fn wx(self) -> Vector<2, T, A> {
        self.shuffle_2::<3, 0>()
    }

    /// Returns a new vector with the `w` and `y` (4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn wy(self) -> Vector<2, T, A> {
        self.shuffle_2::<3, 1>()
    }

    /// Returns a new vector with the `w` and `z` (4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn wz(self) -> Vector<2, T, A> {
        self.shuffle_2::<3, 2>()
    }

    /// Returns a new vector with the `w` and `w` (4th and 4th) components of `self`.
    #[inline(always)]
    pub fn ww(self) -> Vector<2, T, A> {
        self.shuffle_2::<3, 3>()
    }

    /// Returns a new vector with the `x`, `x` and `x` (1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 0>()
    }

    /// Returns a new vector with the `x`, `x` and `y` (1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 1>()
    }

    /// Returns a new vector with the `x`, `x` and `z` (1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxz(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 2>()
    }

    /// Returns a new vector with the `x`, `x` and `w` (1st, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn xxw(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 0, 3>()
    }

    /// Returns a new vector with the `x`, `y` and `x` (1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 0>()
    }

    /// Returns a new vector with the `x`, `y` and `y` (1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 1>()
    }

    /// Returns a new vector with the `x`, `y` and `z` (1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xyz(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 2>()
    }

    /// Returns a new vector with the `x`, `y` and `w` (1st, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn xyw(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 1, 3>()
    }

    /// Returns a new vector with the `x`, `z` and `x` (1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xzx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 2, 0>()
    }

    /// Returns a new vector with the `x`, `z` and `y` (1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 2, 1>()
    }

    /// Returns a new vector with the `x`, `z` and `z` (1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzz(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 2, 2>()
    }

    /// Returns a new vector with the `x`, `z` and `w` (1st, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn xzw(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 2, 3>()
    }

    /// Returns a new vector with the `x`, `w` and `x` (1st, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn xwx(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 3, 0>()
    }

    /// Returns a new vector with the `x`, `w` and `y` (1st, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn xwy(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 3, 1>()
    }

    /// Returns a new vector with the `x`, `w` and `z` (1st, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn xwz(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 3, 2>()
    }

    /// Returns a new vector with the `x`, `w` and `w` (1st, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn xww(self) -> Vector<3, T, A> {
        self.shuffle_3::<0, 3, 3>()
    }

    /// Returns a new vector with the `y`, `x` and `x` (2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 0>()
    }

    /// Returns a new vector with the `y`, `x` and `y` (2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 1>()
    }

    /// Returns a new vector with the `y`, `x` and `z` (2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxz(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 2>()
    }

    /// Returns a new vector with the `y`, `x` and `w` (2nd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn yxw(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 0, 3>()
    }

    /// Returns a new vector with the `y`, `y` and `x` (2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 0>()
    }

    /// Returns a new vector with the `y`, `y` and `y` (2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 1>()
    }

    /// Returns a new vector with the `y`, `y` and `z` (2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yyz(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 2>()
    }

    /// Returns a new vector with the `y`, `y` and `w` (2nd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn yyw(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 1, 3>()
    }

    /// Returns a new vector with the `y`, `z` and `x` (2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn yzx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 2, 0>()
    }

    /// Returns a new vector with the `y`, `z` and `y` (2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 2, 1>()
    }

    /// Returns a new vector with the `y`, `z` and `z` (2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzz(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 2, 2>()
    }

    /// Returns a new vector with the `y`, `z` and `w` (2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn yzw(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 2, 3>()
    }

    /// Returns a new vector with the `y`, `w` and `x` (2nd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn ywx(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 3, 0>()
    }

    /// Returns a new vector with the `y`, `w` and `y` (2nd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn ywy(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 3, 1>()
    }

    /// Returns a new vector with the `y`, `w` and `z` (2nd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn ywz(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 3, 2>()
    }

    /// Returns a new vector with the `y`, `w` and `w` (2nd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn yww(self) -> Vector<3, T, A> {
        self.shuffle_3::<1, 3, 3>()
    }

    /// Returns a new vector with the `z`, `x` and `x` (3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 0, 0>()
    }

    /// Returns a new vector with the `z`, `x` and `y` (3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 0, 1>()
    }

    /// Returns a new vector with the `z`, `x` and `z` (3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxz(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 0, 2>()
    }

    /// Returns a new vector with the `z`, `x` and `w` (3rd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn zxw(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 0, 3>()
    }

    /// Returns a new vector with the `z`, `y` and `x` (3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 1, 0>()
    }

    /// Returns a new vector with the `z`, `y` and `y` (3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 1, 1>()
    }

    /// Returns a new vector with the `z`, `y` and `z` (3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zyz(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 1, 2>()
    }

    /// Returns a new vector with the `z`, `y` and `w` (3rd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn zyw(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 1, 3>()
    }

    /// Returns a new vector with the `z`, `z` and `x` (3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zzx(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 2, 0>()
    }

    /// Returns a new vector with the `z`, `z` and `y` (3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzy(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 2, 1>()
    }

    /// Returns a new vector with the `z`, `z` and `z` (3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzz(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 2, 2>()
    }

    /// Returns a new vector with the `z`, `z` and `w` (3rd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn zzw(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 2, 3>()
    }

    /// Returns a new vector with the `z`, `w` and `x` (3rd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn zwx(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 3, 0>()
    }

    /// Returns a new vector with the `z`, `w` and `y` (3rd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn zwy(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 3, 1>()
    }

    /// Returns a new vector with the `z`, `w` and `z` (3rd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn zwz(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 3, 2>()
    }

    /// Returns a new vector with the `z`, `w` and `w` (3rd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn zww(self) -> Vector<3, T, A> {
        self.shuffle_3::<2, 3, 3>()
    }

    /// Returns a new vector with the `w`, `x` and `x` (4th, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn wxx(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 0, 0>()
    }

    /// Returns a new vector with the `w`, `x` and `y` (4th, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn wxy(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 0, 1>()
    }

    /// Returns a new vector with the `w`, `x` and `z` (4th, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn wxz(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 0, 2>()
    }

    /// Returns a new vector with the `w`, `x` and `w` (4th, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn wxw(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 0, 3>()
    }

    /// Returns a new vector with the `w`, `y` and `x` (4th, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn wyx(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 1, 0>()
    }

    /// Returns a new vector with the `w`, `y` and `y` (4th, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wyy(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 1, 1>()
    }

    /// Returns a new vector with the `w`, `y` and `z` (4th, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wyz(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 1, 2>()
    }

    /// Returns a new vector with the `w`, `y` and `w` (4th, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn wyw(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 1, 3>()
    }

    /// Returns a new vector with the `w`, `z` and `x` (4th, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn wzx(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 2, 0>()
    }

    /// Returns a new vector with the `w`, `z` and `y` (4th, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wzy(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 2, 1>()
    }

    /// Returns a new vector with the `w`, `z` and `z` (4th, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wzz(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 2, 2>()
    }

    /// Returns a new vector with the `w`, `z` and `w` (4th, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn wzw(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 2, 3>()
    }

    /// Returns a new vector with the `w`, `w` and `x` (4th, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn wwx(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 3, 0>()
    }

    /// Returns a new vector with the `w`, `w` and `y` (4th, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn wwy(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 3, 1>()
    }

    /// Returns a new vector with the `w`, `w` and `z` (4th, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn wwz(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 3, 2>()
    }

    /// Returns a new vector with the `w`, `w` and `w` (4th, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn www(self) -> Vector<3, T, A> {
        self.shuffle_3::<3, 3, 3>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `x` (1st, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `y` (1st, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `z` (1st, 1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 2>()
    }

    /// Returns a new vector with the `x`, `x`, `x` and `w` (1st, 1st, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn xxxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 0, 3>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `x` (1st, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `y` (1st, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `z` (1st, 1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 2>()
    }

    /// Returns a new vector with the `x`, `x`, `y` and `w` (1st, 1st, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn xxyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 1, 3>()
    }

    /// Returns a new vector with the `x`, `x`, `z` and `x` (1st, 1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xxzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 2, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `z` and `y` (1st, 1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 2, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `z` and `z` (1st, 1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 2, 2>()
    }

    /// Returns a new vector with the `x`, `x`, `z` and `w` (1st, 1st, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn xxzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 2, 3>()
    }

    /// Returns a new vector with the `x`, `x`, `w` and `x` (1st, 1st, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn xxwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 3, 0>()
    }

    /// Returns a new vector with the `x`, `x`, `w` and `y` (1st, 1st, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn xxwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 3, 1>()
    }

    /// Returns a new vector with the `x`, `x`, `w` and `z` (1st, 1st, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn xxwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 3, 2>()
    }

    /// Returns a new vector with the `x`, `x`, `w` and `w` (1st, 1st, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn xxww(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 0, 3, 3>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `x` (1st, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `y` (1st, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `z` (1st, 2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xyxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 2>()
    }

    /// Returns a new vector with the `x`, `y`, `x` and `w` (1st, 2nd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn xyxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 0, 3>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `x` (1st, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `y` (1st, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `z` (1st, 2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xyyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 2>()
    }

    /// Returns a new vector with the `x`, `y`, `y` and `w` (1st, 2nd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn xyyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 1, 3>()
    }

    /// Returns a new vector with the `x`, `y`, `z` and `x` (1st, 2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xyzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 2, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `z` and `y` (1st, 2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xyzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 2, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `z` and `z` (1st, 2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xyzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 2, 2>()
    }

    /// Returns a new vector with the `x`, `y`, `z` and `w` (1st, 2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn xyzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 2, 3>()
    }

    /// Returns a new vector with the `x`, `y`, `w` and `x` (1st, 2nd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn xywx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 3, 0>()
    }

    /// Returns a new vector with the `x`, `y`, `w` and `y` (1st, 2nd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn xywy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 3, 1>()
    }

    /// Returns a new vector with the `x`, `y`, `w` and `z` (1st, 2nd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn xywz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 3, 2>()
    }

    /// Returns a new vector with the `x`, `y`, `w` and `w` (1st, 2nd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn xyww(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 1, 3, 3>()
    }

    /// Returns a new vector with the `x`, `z`, `x` and `x` (1st, 3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xzxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 0, 0>()
    }

    /// Returns a new vector with the `x`, `z`, `x` and `y` (1st, 3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 0, 1>()
    }

    /// Returns a new vector with the `x`, `z`, `x` and `z` (1st, 3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 0, 2>()
    }

    /// Returns a new vector with the `x`, `z`, `x` and `w` (1st, 3rd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn xzxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 0, 3>()
    }

    /// Returns a new vector with the `x`, `z`, `y` and `x` (1st, 3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xzyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 1, 0>()
    }

    /// Returns a new vector with the `x`, `z`, `y` and `y` (1st, 3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 1, 1>()
    }

    /// Returns a new vector with the `x`, `z`, `y` and `z` (1st, 3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 1, 2>()
    }

    /// Returns a new vector with the `x`, `z`, `y` and `w` (1st, 3rd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn xzyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 1, 3>()
    }

    /// Returns a new vector with the `x`, `z`, `z` and `x` (1st, 3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xzzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 2, 0>()
    }

    /// Returns a new vector with the `x`, `z`, `z` and `y` (1st, 3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 2, 1>()
    }

    /// Returns a new vector with the `x`, `z`, `z` and `z` (1st, 3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 2, 2>()
    }

    /// Returns a new vector with the `x`, `z`, `z` and `w` (1st, 3rd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn xzzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 2, 3>()
    }

    /// Returns a new vector with the `x`, `z`, `w` and `x` (1st, 3rd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn xzwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 3, 0>()
    }

    /// Returns a new vector with the `x`, `z`, `w` and `y` (1st, 3rd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn xzwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 3, 1>()
    }

    /// Returns a new vector with the `x`, `z`, `w` and `z` (1st, 3rd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn xzwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 3, 2>()
    }

    /// Returns a new vector with the `x`, `z`, `w` and `w` (1st, 3rd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn xzww(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 2, 3, 3>()
    }

    /// Returns a new vector with the `x`, `w`, `x` and `x` (1st, 4th, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn xwxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 0, 0>()
    }

    /// Returns a new vector with the `x`, `w`, `x` and `y` (1st, 4th, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn xwxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 0, 1>()
    }

    /// Returns a new vector with the `x`, `w`, `x` and `z` (1st, 4th, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn xwxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 0, 2>()
    }

    /// Returns a new vector with the `x`, `w`, `x` and `w` (1st, 4th, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn xwxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 0, 3>()
    }

    /// Returns a new vector with the `x`, `w`, `y` and `x` (1st, 4th, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn xwyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 1, 0>()
    }

    /// Returns a new vector with the `x`, `w`, `y` and `y` (1st, 4th, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xwyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 1, 1>()
    }

    /// Returns a new vector with the `x`, `w`, `y` and `z` (1st, 4th, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xwyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 1, 2>()
    }

    /// Returns a new vector with the `x`, `w`, `y` and `w` (1st, 4th, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn xwyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 1, 3>()
    }

    /// Returns a new vector with the `x`, `w`, `z` and `x` (1st, 4th, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn xwzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 2, 0>()
    }

    /// Returns a new vector with the `x`, `w`, `z` and `y` (1st, 4th, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn xwzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 2, 1>()
    }

    /// Returns a new vector with the `x`, `w`, `z` and `z` (1st, 4th, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn xwzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 2, 2>()
    }

    /// Returns a new vector with the `x`, `w`, `z` and `w` (1st, 4th, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn xwzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 2, 3>()
    }

    /// Returns a new vector with the `x`, `w`, `w` and `x` (1st, 4th, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn xwwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 3, 0>()
    }

    /// Returns a new vector with the `x`, `w`, `w` and `y` (1st, 4th, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn xwwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 3, 1>()
    }

    /// Returns a new vector with the `x`, `w`, `w` and `z` (1st, 4th, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn xwwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 3, 2>()
    }

    /// Returns a new vector with the `x`, `w`, `w` and `w` (1st, 4th, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn xwww(self) -> Vector<4, T, A> {
        self.shuffle_4::<0, 3, 3, 3>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `x` (2nd, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `y` (2nd, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `z` (2nd, 1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 2>()
    }

    /// Returns a new vector with the `y`, `x`, `x` and `w` (2nd, 1st, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn yxxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 0, 3>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `x` (2nd, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `y` (2nd, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `z` (2nd, 1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 2>()
    }

    /// Returns a new vector with the `y`, `x`, `y` and `w` (2nd, 1st, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn yxyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 1, 3>()
    }

    /// Returns a new vector with the `y`, `x`, `z` and `x` (2nd, 1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn yxzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 2, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `z` and `y` (2nd, 1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 2, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `z` and `z` (2nd, 1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 2, 2>()
    }

    /// Returns a new vector with the `y`, `x`, `z` and `w` (2nd, 1st, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn yxzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 2, 3>()
    }

    /// Returns a new vector with the `y`, `x`, `w` and `x` (2nd, 1st, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn yxwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 3, 0>()
    }

    /// Returns a new vector with the `y`, `x`, `w` and `y` (2nd, 1st, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn yxwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 3, 1>()
    }

    /// Returns a new vector with the `y`, `x`, `w` and `z` (2nd, 1st, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn yxwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 3, 2>()
    }

    /// Returns a new vector with the `y`, `x`, `w` and `w` (2nd, 1st, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn yxww(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 0, 3, 3>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `x` (2nd, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `y` (2nd, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `z` (2nd, 2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn yyxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 2>()
    }

    /// Returns a new vector with the `y`, `y`, `x` and `w` (2nd, 2nd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn yyxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 0, 3>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `x` (2nd, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `y` (2nd, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `z` (2nd, 2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yyyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 2>()
    }

    /// Returns a new vector with the `y`, `y`, `y` and `w` (2nd, 2nd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn yyyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 1, 3>()
    }

    /// Returns a new vector with the `y`, `y`, `z` and `x` (2nd, 2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn yyzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 2, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `z` and `y` (2nd, 2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yyzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 2, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `z` and `z` (2nd, 2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yyzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 2, 2>()
    }

    /// Returns a new vector with the `y`, `y`, `z` and `w` (2nd, 2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn yyzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 2, 3>()
    }

    /// Returns a new vector with the `y`, `y`, `w` and `x` (2nd, 2nd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn yywx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 3, 0>()
    }

    /// Returns a new vector with the `y`, `y`, `w` and `y` (2nd, 2nd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn yywy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 3, 1>()
    }

    /// Returns a new vector with the `y`, `y`, `w` and `z` (2nd, 2nd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn yywz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 3, 2>()
    }

    /// Returns a new vector with the `y`, `y`, `w` and `w` (2nd, 2nd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn yyww(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 1, 3, 3>()
    }

    /// Returns a new vector with the `y`, `z`, `x` and `x` (2nd, 3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn yzxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 0, 0>()
    }

    /// Returns a new vector with the `y`, `z`, `x` and `y` (2nd, 3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 0, 1>()
    }

    /// Returns a new vector with the `y`, `z`, `x` and `z` (2nd, 3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 0, 2>()
    }

    /// Returns a new vector with the `y`, `z`, `x` and `w` (2nd, 3rd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn yzxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 0, 3>()
    }

    /// Returns a new vector with the `y`, `z`, `y` and `x` (2nd, 3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn yzyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 1, 0>()
    }

    /// Returns a new vector with the `y`, `z`, `y` and `y` (2nd, 3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 1, 1>()
    }

    /// Returns a new vector with the `y`, `z`, `y` and `z` (2nd, 3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 1, 2>()
    }

    /// Returns a new vector with the `y`, `z`, `y` and `w` (2nd, 3rd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn yzyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 1, 3>()
    }

    /// Returns a new vector with the `y`, `z`, `z` and `x` (2nd, 3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn yzzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 2, 0>()
    }

    /// Returns a new vector with the `y`, `z`, `z` and `y` (2nd, 3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 2, 1>()
    }

    /// Returns a new vector with the `y`, `z`, `z` and `z` (2nd, 3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 2, 2>()
    }

    /// Returns a new vector with the `y`, `z`, `z` and `w` (2nd, 3rd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn yzzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 2, 3>()
    }

    /// Returns a new vector with the `y`, `z`, `w` and `x` (2nd, 3rd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn yzwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 3, 0>()
    }

    /// Returns a new vector with the `y`, `z`, `w` and `y` (2nd, 3rd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn yzwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 3, 1>()
    }

    /// Returns a new vector with the `y`, `z`, `w` and `z` (2nd, 3rd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn yzwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 3, 2>()
    }

    /// Returns a new vector with the `y`, `z`, `w` and `w` (2nd, 3rd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn yzww(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 2, 3, 3>()
    }

    /// Returns a new vector with the `y`, `w`, `x` and `x` (2nd, 4th, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn ywxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 0, 0>()
    }

    /// Returns a new vector with the `y`, `w`, `x` and `y` (2nd, 4th, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn ywxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 0, 1>()
    }

    /// Returns a new vector with the `y`, `w`, `x` and `z` (2nd, 4th, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn ywxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 0, 2>()
    }

    /// Returns a new vector with the `y`, `w`, `x` and `w` (2nd, 4th, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn ywxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 0, 3>()
    }

    /// Returns a new vector with the `y`, `w`, `y` and `x` (2nd, 4th, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn ywyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 1, 0>()
    }

    /// Returns a new vector with the `y`, `w`, `y` and `y` (2nd, 4th, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn ywyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 1, 1>()
    }

    /// Returns a new vector with the `y`, `w`, `y` and `z` (2nd, 4th, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn ywyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 1, 2>()
    }

    /// Returns a new vector with the `y`, `w`, `y` and `w` (2nd, 4th, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn ywyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 1, 3>()
    }

    /// Returns a new vector with the `y`, `w`, `z` and `x` (2nd, 4th, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn ywzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 2, 0>()
    }

    /// Returns a new vector with the `y`, `w`, `z` and `y` (2nd, 4th, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn ywzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 2, 1>()
    }

    /// Returns a new vector with the `y`, `w`, `z` and `z` (2nd, 4th, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn ywzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 2, 2>()
    }

    /// Returns a new vector with the `y`, `w`, `z` and `w` (2nd, 4th, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn ywzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 2, 3>()
    }

    /// Returns a new vector with the `y`, `w`, `w` and `x` (2nd, 4th, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn ywwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 3, 0>()
    }

    /// Returns a new vector with the `y`, `w`, `w` and `y` (2nd, 4th, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn ywwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 3, 1>()
    }

    /// Returns a new vector with the `y`, `w`, `w` and `z` (2nd, 4th, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn ywwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 3, 2>()
    }

    /// Returns a new vector with the `y`, `w`, `w` and `w` (2nd, 4th, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn ywww(self) -> Vector<4, T, A> {
        self.shuffle_4::<1, 3, 3, 3>()
    }

    /// Returns a new vector with the `z`, `x`, `x` and `x` (3rd, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 0, 0>()
    }

    /// Returns a new vector with the `z`, `x`, `x` and `y` (3rd, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 0, 1>()
    }

    /// Returns a new vector with the `z`, `x`, `x` and `z` (3rd, 1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 0, 2>()
    }

    /// Returns a new vector with the `z`, `x`, `x` and `w` (3rd, 1st, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn zxxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 0, 3>()
    }

    /// Returns a new vector with the `z`, `x`, `y` and `x` (3rd, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 1, 0>()
    }

    /// Returns a new vector with the `z`, `x`, `y` and `y` (3rd, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 1, 1>()
    }

    /// Returns a new vector with the `z`, `x`, `y` and `z` (3rd, 1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 1, 2>()
    }

    /// Returns a new vector with the `z`, `x`, `y` and `w` (3rd, 1st, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn zxyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 1, 3>()
    }

    /// Returns a new vector with the `z`, `x`, `z` and `x` (3rd, 1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zxzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 2, 0>()
    }

    /// Returns a new vector with the `z`, `x`, `z` and `y` (3rd, 1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 2, 1>()
    }

    /// Returns a new vector with the `z`, `x`, `z` and `z` (3rd, 1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 2, 2>()
    }

    /// Returns a new vector with the `z`, `x`, `z` and `w` (3rd, 1st, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn zxzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 2, 3>()
    }

    /// Returns a new vector with the `z`, `x`, `w` and `x` (3rd, 1st, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn zxwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 3, 0>()
    }

    /// Returns a new vector with the `z`, `x`, `w` and `y` (3rd, 1st, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn zxwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 3, 1>()
    }

    /// Returns a new vector with the `z`, `x`, `w` and `z` (3rd, 1st, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn zxwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 3, 2>()
    }

    /// Returns a new vector with the `z`, `x`, `w` and `w` (3rd, 1st, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn zxww(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 0, 3, 3>()
    }

    /// Returns a new vector with the `z`, `y`, `x` and `x` (3rd, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 0, 0>()
    }

    /// Returns a new vector with the `z`, `y`, `x` and `y` (3rd, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 0, 1>()
    }

    /// Returns a new vector with the `z`, `y`, `x` and `z` (3rd, 2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zyxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 0, 2>()
    }

    /// Returns a new vector with the `z`, `y`, `x` and `w` (3rd, 2nd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn zyxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 0, 3>()
    }

    /// Returns a new vector with the `z`, `y`, `y` and `x` (3rd, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 1, 0>()
    }

    /// Returns a new vector with the `z`, `y`, `y` and `y` (3rd, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 1, 1>()
    }

    /// Returns a new vector with the `z`, `y`, `y` and `z` (3rd, 2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zyyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 1, 2>()
    }

    /// Returns a new vector with the `z`, `y`, `y` and `w` (3rd, 2nd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn zyyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 1, 3>()
    }

    /// Returns a new vector with the `z`, `y`, `z` and `x` (3rd, 2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zyzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 2, 0>()
    }

    /// Returns a new vector with the `z`, `y`, `z` and `y` (3rd, 2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zyzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 2, 1>()
    }

    /// Returns a new vector with the `z`, `y`, `z` and `z` (3rd, 2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zyzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 2, 2>()
    }

    /// Returns a new vector with the `z`, `y`, `z` and `w` (3rd, 2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn zyzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 2, 3>()
    }

    /// Returns a new vector with the `z`, `y`, `w` and `x` (3rd, 2nd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn zywx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 3, 0>()
    }

    /// Returns a new vector with the `z`, `y`, `w` and `y` (3rd, 2nd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn zywy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 3, 1>()
    }

    /// Returns a new vector with the `z`, `y`, `w` and `z` (3rd, 2nd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn zywz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 3, 2>()
    }

    /// Returns a new vector with the `z`, `y`, `w` and `w` (3rd, 2nd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn zyww(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 1, 3, 3>()
    }

    /// Returns a new vector with the `z`, `z`, `x` and `x` (3rd, 3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zzxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 0, 0>()
    }

    /// Returns a new vector with the `z`, `z`, `x` and `y` (3rd, 3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 0, 1>()
    }

    /// Returns a new vector with the `z`, `z`, `x` and `z` (3rd, 3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 0, 2>()
    }

    /// Returns a new vector with the `z`, `z`, `x` and `w` (3rd, 3rd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn zzxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 0, 3>()
    }

    /// Returns a new vector with the `z`, `z`, `y` and `x` (3rd, 3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zzyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 1, 0>()
    }

    /// Returns a new vector with the `z`, `z`, `y` and `y` (3rd, 3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 1, 1>()
    }

    /// Returns a new vector with the `z`, `z`, `y` and `z` (3rd, 3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 1, 2>()
    }

    /// Returns a new vector with the `z`, `z`, `y` and `w` (3rd, 3rd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn zzyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 1, 3>()
    }

    /// Returns a new vector with the `z`, `z`, `z` and `x` (3rd, 3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zzzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 2, 0>()
    }

    /// Returns a new vector with the `z`, `z`, `z` and `y` (3rd, 3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 2, 1>()
    }

    /// Returns a new vector with the `z`, `z`, `z` and `z` (3rd, 3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 2, 2>()
    }

    /// Returns a new vector with the `z`, `z`, `z` and `w` (3rd, 3rd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn zzzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 2, 3>()
    }

    /// Returns a new vector with the `z`, `z`, `w` and `x` (3rd, 3rd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn zzwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 3, 0>()
    }

    /// Returns a new vector with the `z`, `z`, `w` and `y` (3rd, 3rd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn zzwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 3, 1>()
    }

    /// Returns a new vector with the `z`, `z`, `w` and `z` (3rd, 3rd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn zzwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 3, 2>()
    }

    /// Returns a new vector with the `z`, `z`, `w` and `w` (3rd, 3rd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn zzww(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 2, 3, 3>()
    }

    /// Returns a new vector with the `z`, `w`, `x` and `x` (3rd, 4th, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn zwxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 0, 0>()
    }

    /// Returns a new vector with the `z`, `w`, `x` and `y` (3rd, 4th, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn zwxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 0, 1>()
    }

    /// Returns a new vector with the `z`, `w`, `x` and `z` (3rd, 4th, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn zwxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 0, 2>()
    }

    /// Returns a new vector with the `z`, `w`, `x` and `w` (3rd, 4th, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn zwxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 0, 3>()
    }

    /// Returns a new vector with the `z`, `w`, `y` and `x` (3rd, 4th, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn zwyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 1, 0>()
    }

    /// Returns a new vector with the `z`, `w`, `y` and `y` (3rd, 4th, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zwyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 1, 1>()
    }

    /// Returns a new vector with the `z`, `w`, `y` and `z` (3rd, 4th, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zwyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 1, 2>()
    }

    /// Returns a new vector with the `z`, `w`, `y` and `w` (3rd, 4th, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn zwyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 1, 3>()
    }

    /// Returns a new vector with the `z`, `w`, `z` and `x` (3rd, 4th, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn zwzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 2, 0>()
    }

    /// Returns a new vector with the `z`, `w`, `z` and `y` (3rd, 4th, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn zwzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 2, 1>()
    }

    /// Returns a new vector with the `z`, `w`, `z` and `z` (3rd, 4th, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn zwzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 2, 2>()
    }

    /// Returns a new vector with the `z`, `w`, `z` and `w` (3rd, 4th, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn zwzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 2, 3>()
    }

    /// Returns a new vector with the `z`, `w`, `w` and `x` (3rd, 4th, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn zwwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 3, 0>()
    }

    /// Returns a new vector with the `z`, `w`, `w` and `y` (3rd, 4th, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn zwwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 3, 1>()
    }

    /// Returns a new vector with the `z`, `w`, `w` and `z` (3rd, 4th, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn zwwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 3, 2>()
    }

    /// Returns a new vector with the `z`, `w`, `w` and `w` (3rd, 4th, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn zwww(self) -> Vector<4, T, A> {
        self.shuffle_4::<2, 3, 3, 3>()
    }

    /// Returns a new vector with the `w`, `x`, `x` and `x` (4th, 1st, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn wxxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 0, 0>()
    }

    /// Returns a new vector with the `w`, `x`, `x` and `y` (4th, 1st, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn wxxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 0, 1>()
    }

    /// Returns a new vector with the `w`, `x`, `x` and `z` (4th, 1st, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn wxxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 0, 2>()
    }

    /// Returns a new vector with the `w`, `x`, `x` and `w` (4th, 1st, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn wxxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 0, 3>()
    }

    /// Returns a new vector with the `w`, `x`, `y` and `x` (4th, 1st, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn wxyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 1, 0>()
    }

    /// Returns a new vector with the `w`, `x`, `y` and `y` (4th, 1st, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wxyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 1, 1>()
    }

    /// Returns a new vector with the `w`, `x`, `y` and `z` (4th, 1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wxyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 1, 2>()
    }

    /// Returns a new vector with the `w`, `x`, `y` and `w` (4th, 1st, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn wxyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 1, 3>()
    }

    /// Returns a new vector with the `w`, `x`, `z` and `x` (4th, 1st, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn wxzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 2, 0>()
    }

    /// Returns a new vector with the `w`, `x`, `z` and `y` (4th, 1st, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wxzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 2, 1>()
    }

    /// Returns a new vector with the `w`, `x`, `z` and `z` (4th, 1st, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wxzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 2, 2>()
    }

    /// Returns a new vector with the `w`, `x`, `z` and `w` (4th, 1st, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn wxzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 2, 3>()
    }

    /// Returns a new vector with the `w`, `x`, `w` and `x` (4th, 1st, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn wxwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 3, 0>()
    }

    /// Returns a new vector with the `w`, `x`, `w` and `y` (4th, 1st, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn wxwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 3, 1>()
    }

    /// Returns a new vector with the `w`, `x`, `w` and `z` (4th, 1st, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn wxwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 3, 2>()
    }

    /// Returns a new vector with the `w`, `x`, `w` and `w` (4th, 1st, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn wxww(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 0, 3, 3>()
    }

    /// Returns a new vector with the `w`, `y`, `x` and `x` (4th, 2nd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn wyxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 0, 0>()
    }

    /// Returns a new vector with the `w`, `y`, `x` and `y` (4th, 2nd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn wyxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 0, 1>()
    }

    /// Returns a new vector with the `w`, `y`, `x` and `z` (4th, 2nd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn wyxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 0, 2>()
    }

    /// Returns a new vector with the `w`, `y`, `x` and `w` (4th, 2nd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn wyxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 0, 3>()
    }

    /// Returns a new vector with the `w`, `y`, `y` and `x` (4th, 2nd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn wyyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 1, 0>()
    }

    /// Returns a new vector with the `w`, `y`, `y` and `y` (4th, 2nd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wyyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 1, 1>()
    }

    /// Returns a new vector with the `w`, `y`, `y` and `z` (4th, 2nd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wyyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 1, 2>()
    }

    /// Returns a new vector with the `w`, `y`, `y` and `w` (4th, 2nd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn wyyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 1, 3>()
    }

    /// Returns a new vector with the `w`, `y`, `z` and `x` (4th, 2nd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn wyzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 2, 0>()
    }

    /// Returns a new vector with the `w`, `y`, `z` and `y` (4th, 2nd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wyzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 2, 1>()
    }

    /// Returns a new vector with the `w`, `y`, `z` and `z` (4th, 2nd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wyzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 2, 2>()
    }

    /// Returns a new vector with the `w`, `y`, `z` and `w` (4th, 2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn wyzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 2, 3>()
    }

    /// Returns a new vector with the `w`, `y`, `w` and `x` (4th, 2nd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn wywx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 3, 0>()
    }

    /// Returns a new vector with the `w`, `y`, `w` and `y` (4th, 2nd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn wywy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 3, 1>()
    }

    /// Returns a new vector with the `w`, `y`, `w` and `z` (4th, 2nd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn wywz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 3, 2>()
    }

    /// Returns a new vector with the `w`, `y`, `w` and `w` (4th, 2nd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn wyww(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 1, 3, 3>()
    }

    /// Returns a new vector with the `w`, `z`, `x` and `x` (4th, 3rd, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn wzxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 0, 0>()
    }

    /// Returns a new vector with the `w`, `z`, `x` and `y` (4th, 3rd, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn wzxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 0, 1>()
    }

    /// Returns a new vector with the `w`, `z`, `x` and `z` (4th, 3rd, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn wzxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 0, 2>()
    }

    /// Returns a new vector with the `w`, `z`, `x` and `w` (4th, 3rd, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn wzxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 0, 3>()
    }

    /// Returns a new vector with the `w`, `z`, `y` and `x` (4th, 3rd, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn wzyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 1, 0>()
    }

    /// Returns a new vector with the `w`, `z`, `y` and `y` (4th, 3rd, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wzyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 1, 1>()
    }

    /// Returns a new vector with the `w`, `z`, `y` and `z` (4th, 3rd, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wzyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 1, 2>()
    }

    /// Returns a new vector with the `w`, `z`, `y` and `w` (4th, 3rd, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn wzyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 1, 3>()
    }

    /// Returns a new vector with the `w`, `z`, `z` and `x` (4th, 3rd, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn wzzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 2, 0>()
    }

    /// Returns a new vector with the `w`, `z`, `z` and `y` (4th, 3rd, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wzzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 2, 1>()
    }

    /// Returns a new vector with the `w`, `z`, `z` and `z` (4th, 3rd, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wzzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 2, 2>()
    }

    /// Returns a new vector with the `w`, `z`, `z` and `w` (4th, 3rd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn wzzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 2, 3>()
    }

    /// Returns a new vector with the `w`, `z`, `w` and `x` (4th, 3rd, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn wzwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 3, 0>()
    }

    /// Returns a new vector with the `w`, `z`, `w` and `y` (4th, 3rd, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn wzwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 3, 1>()
    }

    /// Returns a new vector with the `w`, `z`, `w` and `z` (4th, 3rd, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn wzwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 3, 2>()
    }

    /// Returns a new vector with the `w`, `z`, `w` and `w` (4th, 3rd, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn wzww(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 2, 3, 3>()
    }

    /// Returns a new vector with the `w`, `w`, `x` and `x` (4th, 4th, 1st and 1st) components of `self`.
    #[inline(always)]
    pub fn wwxx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 0, 0>()
    }

    /// Returns a new vector with the `w`, `w`, `x` and `y` (4th, 4th, 1st and 2nd) components of `self`.
    #[inline(always)]
    pub fn wwxy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 0, 1>()
    }

    /// Returns a new vector with the `w`, `w`, `x` and `z` (4th, 4th, 1st and 3rd) components of `self`.
    #[inline(always)]
    pub fn wwxz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 0, 2>()
    }

    /// Returns a new vector with the `w`, `w`, `x` and `w` (4th, 4th, 1st and 4th) components of `self`.
    #[inline(always)]
    pub fn wwxw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 0, 3>()
    }

    /// Returns a new vector with the `w`, `w`, `y` and `x` (4th, 4th, 2nd and 1st) components of `self`.
    #[inline(always)]
    pub fn wwyx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 1, 0>()
    }

    /// Returns a new vector with the `w`, `w`, `y` and `y` (4th, 4th, 2nd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wwyy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 1, 1>()
    }

    /// Returns a new vector with the `w`, `w`, `y` and `z` (4th, 4th, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wwyz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 1, 2>()
    }

    /// Returns a new vector with the `w`, `w`, `y` and `w` (4th, 4th, 2nd and 4th) components of `self`.
    #[inline(always)]
    pub fn wwyw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 1, 3>()
    }

    /// Returns a new vector with the `w`, `w`, `z` and `x` (4th, 4th, 3rd and 1st) components of `self`.
    #[inline(always)]
    pub fn wwzx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 2, 0>()
    }

    /// Returns a new vector with the `w`, `w`, `z` and `y` (4th, 4th, 3rd and 2nd) components of `self`.
    #[inline(always)]
    pub fn wwzy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 2, 1>()
    }

    /// Returns a new vector with the `w`, `w`, `z` and `z` (4th, 4th, 3rd and 3rd) components of `self`.
    #[inline(always)]
    pub fn wwzz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 2, 2>()
    }

    /// Returns a new vector with the `w`, `w`, `z` and `w` (4th, 4th, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub fn wwzw(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 2, 3>()
    }

    /// Returns a new vector with the `w`, `w`, `w` and `x` (4th, 4th, 4th and 1st) components of `self`.
    #[inline(always)]
    pub fn wwwx(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 3, 0>()
    }

    /// Returns a new vector with the `w`, `w`, `w` and `y` (4th, 4th, 4th and 2nd) components of `self`.
    #[inline(always)]
    pub fn wwwy(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 3, 1>()
    }

    /// Returns a new vector with the `w`, `w`, `w` and `z` (4th, 4th, 4th and 3rd) components of `self`.
    #[inline(always)]
    pub fn wwwz(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 3, 2>()
    }

    /// Returns a new vector with the `w`, `w`, `w` and `w` (4th, 4th, 4th and 4th) components of `self`.
    #[inline(always)]
    pub fn wwww(self) -> Vector<4, T, A> {
        self.shuffle_4::<3, 3, 3, 3>()
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_xy(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<0, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_xz(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<0, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_xw(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<0, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_yx(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<1, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_yz(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<1, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_yw(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<1, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_zx(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<2, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_zy(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<2, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_zw(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<2, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_wx(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<3, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_wy(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<3, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn with_wz(self, value: Vector<2, T, A>) -> Self {
        self.with_shuffle_2::<3, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_xyz(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<0, 1, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_xyw(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<0, 1, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_xzy(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<0, 2, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_xzw(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<0, 2, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_xwy(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<0, 3, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_xwz(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<0, 3, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_yxz(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<1, 0, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_yxw(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<1, 0, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_yzx(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<1, 2, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_yzw(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<1, 2, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_ywx(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<1, 3, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_ywz(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<1, 3, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_zxy(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<2, 0, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_zxw(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<2, 0, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_zyx(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<2, 1, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_zyw(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<2, 1, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_zwx(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<2, 3, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_zwy(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<2, 3, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_wxy(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<3, 0, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_wxz(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<3, 0, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_wyx(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<3, 1, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_wyz(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<3, 1, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_wzx(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<3, 2, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn with_wzy(self, value: Vector<3, T, A>) -> Self {
        self.with_shuffle_3::<3, 2, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    /// - The `w` (4th) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_xyzw(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<0, 1, 2, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    /// - The `z` (3rd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_xywz(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<0, 1, 3, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    /// - The `w` (4th) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_xzyw(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<0, 2, 1, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    /// - The `y` (2nd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_xzwy(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<0, 2, 3, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    /// - The `z` (3rd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_xwyz(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<0, 3, 1, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `x` (1st) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    /// - The `y` (2nd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_xwzy(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<0, 3, 2, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    /// - The `w` (4th) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_yxzw(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<1, 0, 2, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    /// - The `z` (3rd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_yxwz(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<1, 0, 3, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    /// - The `w` (4th) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_yzxw(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<1, 2, 0, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    /// - The `x` (1st) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_yzwx(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<1, 2, 3, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    /// - The `z` (3rd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_ywxz(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<1, 3, 0, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `y` (2nd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    /// - The `x` (1st) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_ywzx(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<1, 3, 2, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    /// - The `w` (4th) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_zxyw(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<2, 0, 1, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    /// - The `y` (2nd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_zxwy(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<2, 0, 3, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    /// - The `w` (4th) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_zyxw(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<2, 1, 0, 3>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `w` (4th) component set to the `z` (3rd) component of `value`
    /// - The `x` (1st) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_zywx(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<2, 1, 3, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    /// - The `y` (2nd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_zwxy(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<2, 3, 0, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `z` (3rd) component set to the `x` (1st) component of `value`
    /// - The `w` (4th) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    /// - The `x` (1st) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_zwyx(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<2, 3, 1, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    /// - The `z` (3rd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_wxyz(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<3, 0, 1, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `x` (1st) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    /// - The `y` (2nd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_wxzy(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<3, 0, 2, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    /// - The `z` (3rd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_wyxz(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<3, 1, 0, 2>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `y` (2nd) component set to the `y` (2nd) component of `value`
    /// - The `z` (3rd) component set to the `z` (3rd) component of `value`
    /// - The `x` (1st) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_wyzx(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<3, 1, 2, 0>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `x` (1st) component set to the `z` (3rd) component of `value`
    /// - The `y` (2nd) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_wzxy(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<3, 2, 0, 1>(value)
    }

    /// Returns `self` but with:
    /// - The `w` (4th) component set to the `x` (1st) component of `value`
    /// - The `z` (3rd) component set to the `y` (2nd) component of `value`
    /// - The `y` (2nd) component set to the `z` (3rd) component of `value`
    /// - The `x` (1st) component set to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn with_wzyx(self, value: Vector<4, T, A>) -> Self {
        self.with_shuffle_4::<3, 2, 1, 0>(value)
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_xy(&mut self, value: Vector<2, T, A>) {
        *self = self.with_xy(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_xz(&mut self, value: Vector<2, T, A>) {
        *self = self.with_xz(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_xw(&mut self, value: Vector<2, T, A>) {
        *self = self.with_xw(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_yx(&mut self, value: Vector<2, T, A>) {
        *self = self.with_yx(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_yz(&mut self, value: Vector<2, T, A>) {
        *self = self.with_yz(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_yw(&mut self, value: Vector<2, T, A>) {
        *self = self.with_yw(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_zx(&mut self, value: Vector<2, T, A>) {
        *self = self.with_zx(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_zy(&mut self, value: Vector<2, T, A>) {
        *self = self.with_zy(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_zw(&mut self, value: Vector<2, T, A>) {
        *self = self.with_zw(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_wx(&mut self, value: Vector<2, T, A>) {
        *self = self.with_wx(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_wy(&mut self, value: Vector<2, T, A>) {
        *self = self.with_wy(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    #[inline(always)]
    pub fn set_wz(&mut self, value: Vector<2, T, A>) {
        *self = self.with_wz(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_xyz(&mut self, value: Vector<3, T, A>) {
        *self = self.with_xyz(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_xyw(&mut self, value: Vector<3, T, A>) {
        *self = self.with_xyw(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_xzy(&mut self, value: Vector<3, T, A>) {
        *self = self.with_xzy(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_xzw(&mut self, value: Vector<3, T, A>) {
        *self = self.with_xzw(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_xwy(&mut self, value: Vector<3, T, A>) {
        *self = self.with_xwy(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_xwz(&mut self, value: Vector<3, T, A>) {
        *self = self.with_xwz(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_yxz(&mut self, value: Vector<3, T, A>) {
        *self = self.with_yxz(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_yxw(&mut self, value: Vector<3, T, A>) {
        *self = self.with_yxw(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_yzx(&mut self, value: Vector<3, T, A>) {
        *self = self.with_yzx(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_yzw(&mut self, value: Vector<3, T, A>) {
        *self = self.with_yzw(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_ywx(&mut self, value: Vector<3, T, A>) {
        *self = self.with_ywx(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_ywz(&mut self, value: Vector<3, T, A>) {
        *self = self.with_ywz(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_zxy(&mut self, value: Vector<3, T, A>) {
        *self = self.with_zxy(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_zxw(&mut self, value: Vector<3, T, A>) {
        *self = self.with_zxw(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_zyx(&mut self, value: Vector<3, T, A>) {
        *self = self.with_zyx(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_zyw(&mut self, value: Vector<3, T, A>) {
        *self = self.with_zyw(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_zwx(&mut self, value: Vector<3, T, A>) {
        *self = self.with_zwx(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_zwy(&mut self, value: Vector<3, T, A>) {
        *self = self.with_zwy(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_wxy(&mut self, value: Vector<3, T, A>) {
        *self = self.with_wxy(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_wxz(&mut self, value: Vector<3, T, A>) {
        *self = self.with_wxz(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_wyx(&mut self, value: Vector<3, T, A>) {
        *self = self.with_wyx(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_wyz(&mut self, value: Vector<3, T, A>) {
        *self = self.with_wyz(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_wzx(&mut self, value: Vector<3, T, A>) {
        *self = self.with_wzx(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    #[inline(always)]
    pub fn set_wzy(&mut self, value: Vector<3, T, A>) {
        *self = self.with_wzy(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_xyzw(&mut self, value: Vector<4, T, A>) {
        *self = self.with_xyzw(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_xywz(&mut self, value: Vector<4, T, A>) {
        *self = self.with_xywz(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_xzyw(&mut self, value: Vector<4, T, A>) {
        *self = self.with_xzyw(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_xzwy(&mut self, value: Vector<4, T, A>) {
        *self = self.with_xzwy(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_xwyz(&mut self, value: Vector<4, T, A>) {
        *self = self.with_xwyz(value);
    }

    /// - Sets the `x` (1st) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_xwzy(&mut self, value: Vector<4, T, A>) {
        *self = self.with_xwzy(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_yxzw(&mut self, value: Vector<4, T, A>) {
        *self = self.with_yxzw(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_yxwz(&mut self, value: Vector<4, T, A>) {
        *self = self.with_yxwz(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_yzxw(&mut self, value: Vector<4, T, A>) {
        *self = self.with_yzxw(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_yzwx(&mut self, value: Vector<4, T, A>) {
        *self = self.with_yzwx(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_ywxz(&mut self, value: Vector<4, T, A>) {
        *self = self.with_ywxz(value);
    }

    /// - Sets the `y` (2nd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_ywzx(&mut self, value: Vector<4, T, A>) {
        *self = self.with_ywzx(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_zxyw(&mut self, value: Vector<4, T, A>) {
        *self = self.with_zxyw(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_zxwy(&mut self, value: Vector<4, T, A>) {
        *self = self.with_zxwy(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_zyxw(&mut self, value: Vector<4, T, A>) {
        *self = self.with_zyxw(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_zywx(&mut self, value: Vector<4, T, A>) {
        *self = self.with_zywx(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_zwxy(&mut self, value: Vector<4, T, A>) {
        *self = self.with_zwxy(value);
    }

    /// - Sets the `z` (3rd) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `w` (4th) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_zwyx(&mut self, value: Vector<4, T, A>) {
        *self = self.with_zwyx(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_wxyz(&mut self, value: Vector<4, T, A>) {
        *self = self.with_wxyz(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_wxzy(&mut self, value: Vector<4, T, A>) {
        *self = self.with_wxzy(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_wyxz(&mut self, value: Vector<4, T, A>) {
        *self = self.with_wyxz(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_wyzx(&mut self, value: Vector<4, T, A>) {
        *self = self.with_wyzx(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_wzxy(&mut self, value: Vector<4, T, A>) {
        *self = self.with_wzxy(value);
    }

    /// - Sets the `w` (4th) component of `self` to the `x` (1st) component of `value`
    /// - Sets the `z` (3rd) component of `self` to the `y` (2nd) component of `value`
    /// - Sets the `y` (2nd) component of `self` to the `z` (3rd) component of `value`
    /// - Sets the `x` (1st) component of `self` to the `w` (4th) component of `value`
    #[inline(always)]
    pub fn set_wzyx(&mut self, value: Vector<4, T, A>) {
        *self = self.with_wzyx(value);
    }
}

impl<T: Scalar> Vec2P<T> {
    /// Returns a reference to the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub const fn xy_ref(&self) -> &Vec2P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(0) as *const [T; 2]) })
    }

    /// Returns a mutable reference to the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub const fn xy_mut(&mut self) -> &mut Vec2P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(0) as *mut [T; 2]) })
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` (2nd) component of `self`
    #[inline(always)]
    pub const fn x_y_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(1),
            )
        }
    }
}

impl<T: Scalar> Vec3P<T> {
    /// Returns a reference to the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub const fn xy_ref(&self) -> &Vec2P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(0) as *const [T; 2]) })
    }
    /// Returns a reference to the `y` and `z` (2nd and 3rd) components of `self`.
    #[inline(always)]
    pub const fn yz_ref(&self) -> &Vec2P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(1) as *const [T; 2]) })
    }

    /// Returns a reference to the `x`, `y` and `z` (1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub const fn xyz_ref(&self) -> &Vec3P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(0) as *const [T; 3]) })
    }

    /// Returns a mutable reference to the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub const fn xy_mut(&mut self) -> &mut Vec2P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(0) as *mut [T; 2]) })
    }

    /// Returns a mutable reference to the `y` and `z` (2nd and 3rd) components of `self`.
    #[inline(always)]
    pub const fn yz_mut(&mut self) -> &mut Vec2P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(1) as *mut [T; 2]) })
    }

    /// Returns a mutable reference to the `x`, `y` and `z` (1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub const fn xyz_mut(&mut self) -> &mut Vec3P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(0) as *mut [T; 3]) })
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` (2nd) component of `self`
    #[inline(always)]
    pub const fn x_y_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(1),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` (2nd) component of `self`
    /// - The `z` (3rd) component of `self`
    #[inline(always)]
    pub const fn x_y_z_mut(&mut self) -> (&mut T, &mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(1),
                &mut *self.as_mut_ptr().add(2),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` and `z` (2nd and 3rd) components of `self`
    #[inline(always)]
    pub const fn x_yz_mut(&mut self) -> (&mut T, &mut Vec2P<T>) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(1) as *mut [T; 2])),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `z` (3rd) component of `self`
    #[inline(always)]
    pub const fn x_z_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(2),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` and `y` (1st and 2nd) components of `self`
    /// - The `z` (3rd) component of `self`
    #[inline(always)]
    pub const fn xy_z_mut(&mut self) -> (&mut Vec2P<T>, &mut T) {
        unsafe {
            (
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(0) as *mut [T; 2])),
                &mut *self.as_mut_ptr().add(2),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `y` (2nd) component of `self`
    /// - The `z` (3rd) component of `self`
    #[inline(always)]
    pub const fn y_z_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(1),
                &mut *self.as_mut_ptr().add(2),
            )
        }
    }
}

impl<T: Scalar> Vec4P<T> {
    /// Returns a reference to the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub const fn xy_ref(&self) -> &Vec2P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(0) as *const [T; 2]) })
    }
    /// Returns a reference to the `y` and `z` (2nd and 3rd) components of `self`.
    #[inline(always)]
    pub const fn yz_ref(&self) -> &Vec2P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(1) as *const [T; 2]) })
    }
    /// Returns a reference to the `z` and `w` (3rd and 4th) components of `self`.
    #[inline(always)]
    pub const fn zw_ref(&self) -> &Vec2P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(2) as *const [T; 2]) })
    }

    /// Returns a reference to the `x`, `y` and `z` (1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub const fn xyz_ref(&self) -> &Vec3P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(0) as *const [T; 3]) })
    }
    /// Returns a reference to the `y`, `z` and `w` (2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub const fn yzw_ref(&self) -> &Vec3P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(1) as *const [T; 3]) })
    }

    /// Returns a reference to the `x`, `y`, `z` and `w` (1st, 2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub const fn xyzw_ref(&self) -> &Vec4P<T> {
        Vector::from_array_ref(unsafe { &*(self.as_ptr().add(0) as *const [T; 4]) })
    }

    /// Returns a mutable reference to the `x` and `y` (1st and 2nd) components of `self`.
    #[inline(always)]
    pub const fn xy_mut(&mut self) -> &mut Vec2P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(0) as *mut [T; 2]) })
    }

    /// Returns a mutable reference to the `y` and `z` (2nd and 3rd) components of `self`.
    #[inline(always)]
    pub const fn yz_mut(&mut self) -> &mut Vec2P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(1) as *mut [T; 2]) })
    }

    /// Returns a mutable reference to the `z` and `w` (3rd and 4th) components of `self`.
    #[inline(always)]
    pub const fn zw_mut(&mut self) -> &mut Vec2P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(2) as *mut [T; 2]) })
    }

    /// Returns a mutable reference to the `x`, `y` and `z` (1st, 2nd and 3rd) components of `self`.
    #[inline(always)]
    pub const fn xyz_mut(&mut self) -> &mut Vec3P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(0) as *mut [T; 3]) })
    }

    /// Returns a mutable reference to the `y`, `z` and `w` (2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub const fn yzw_mut(&mut self) -> &mut Vec3P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(1) as *mut [T; 3]) })
    }

    /// Returns a mutable reference to the `x`, `y`, `z` and `w` (1st, 2nd, 3rd and 4th) components of `self`.
    #[inline(always)]
    pub const fn xyzw_mut(&mut self) -> &mut Vec4P<T> {
        Vector::from_mut_array(unsafe { &mut *(self.as_mut_ptr().add(0) as *mut [T; 4]) })
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` (2nd) component of `self`
    #[inline(always)]
    pub const fn x_y_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(1),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` (2nd) component of `self`
    /// - The `z` (3rd) component of `self`
    #[inline(always)]
    pub const fn x_y_z_mut(&mut self) -> (&mut T, &mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(1),
                &mut *self.as_mut_ptr().add(2),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` (2nd) component of `self`
    /// - The `z` (3rd) component of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn x_y_z_w_mut(&mut self) -> (&mut T, &mut T, &mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(1),
                &mut *self.as_mut_ptr().add(2),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` (2nd) component of `self`
    /// - The `z` and `w` (3rd and 4th) components of `self`
    #[inline(always)]
    pub const fn x_y_zw_mut(&mut self) -> (&mut T, &mut T, &mut Vec2P<T>) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(1),
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(2) as *mut [T; 2])),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` (2nd) component of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn x_y_w_mut(&mut self) -> (&mut T, &mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(1),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` and `z` (2nd and 3rd) components of `self`
    #[inline(always)]
    pub const fn x_yz_mut(&mut self) -> (&mut T, &mut Vec2P<T>) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(1) as *mut [T; 2])),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y` and `z` (2nd and 3rd) components of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn x_yz_w_mut(&mut self) -> (&mut T, &mut Vec2P<T>, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(1) as *mut [T; 2])),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `y`, `z` and `w` (2nd, 3rd and 4th) components of `self`
    #[inline(always)]
    pub const fn x_yzw_mut(&mut self) -> (&mut T, &mut Vec3P<T>) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(1) as *mut [T; 3])),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `z` (3rd) component of `self`
    #[inline(always)]
    pub const fn x_z_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(2),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `z` (3rd) component of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn x_z_w_mut(&mut self) -> (&mut T, &mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(2),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `z` and `w` (3rd and 4th) components of `self`
    #[inline(always)]
    pub const fn x_zw_mut(&mut self) -> (&mut T, &mut Vec2P<T>) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(2) as *mut [T; 2])),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` (1st) component of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn x_w_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(0),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` and `y` (1st and 2nd) components of `self`
    /// - The `z` (3rd) component of `self`
    #[inline(always)]
    pub const fn xy_z_mut(&mut self) -> (&mut Vec2P<T>, &mut T) {
        unsafe {
            (
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(0) as *mut [T; 2])),
                &mut *self.as_mut_ptr().add(2),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` and `y` (1st and 2nd) components of `self`
    /// - The `z` (3rd) component of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn xy_z_w_mut(&mut self) -> (&mut Vec2P<T>, &mut T, &mut T) {
        unsafe {
            (
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(0) as *mut [T; 2])),
                &mut *self.as_mut_ptr().add(2),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` and `y` (1st and 2nd) components of `self`
    /// - The `z` and `w` (3rd and 4th) components of `self`
    #[inline(always)]
    pub const fn xy_zw_mut(&mut self) -> (&mut Vec2P<T>, &mut Vec2P<T>) {
        unsafe {
            (
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(0) as *mut [T; 2])),
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(2) as *mut [T; 2])),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x` and `y` (1st and 2nd) components of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn xy_w_mut(&mut self) -> (&mut Vec2P<T>, &mut T) {
        unsafe {
            (
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(0) as *mut [T; 2])),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `x`, `y` and `z` (1st, 2nd and 3rd) components of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn xyz_w_mut(&mut self) -> (&mut Vec3P<T>, &mut T) {
        unsafe {
            (
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(0) as *mut [T; 3])),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `y` (2nd) component of `self`
    /// - The `z` (3rd) component of `self`
    #[inline(always)]
    pub const fn y_z_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(1),
                &mut *self.as_mut_ptr().add(2),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `y` (2nd) component of `self`
    /// - The `z` (3rd) component of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn y_z_w_mut(&mut self) -> (&mut T, &mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(1),
                &mut *self.as_mut_ptr().add(2),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `y` (2nd) component of `self`
    /// - The `z` and `w` (3rd and 4th) components of `self`
    #[inline(always)]
    pub const fn y_zw_mut(&mut self) -> (&mut T, &mut Vec2P<T>) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(1),
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(2) as *mut [T; 2])),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `y` (2nd) component of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn y_w_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(1),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `y` and `z` (2nd and 3rd) components of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn yz_w_mut(&mut self) -> (&mut Vec2P<T>, &mut T) {
        unsafe {
            (
                Vector::from_mut_array(&mut *(self.as_mut_ptr().add(1) as *mut [T; 2])),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }

    /// Returns a tuple with mutable references to:
    /// - The `z` (3rd) component of `self`
    /// - The `w` (4th) component of `self`
    #[inline(always)]
    pub const fn z_w_mut(&mut self) -> (&mut T, &mut T) {
        unsafe {
            (
                &mut *self.as_mut_ptr().add(2),
                &mut *self.as_mut_ptr().add(3),
            )
        }
    }
}
